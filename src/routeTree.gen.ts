/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TeacherIndexRouteImport } from './routes/teacher/index'
import { Route as StudentIndexRouteImport } from './routes/student/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as TeacherClassesRouteImport } from './routes/teacher/classes'
import { Route as TeacherLayoutRouteImport } from './routes/teacher/_layout'
import { Route as StudentCoursesRouteImport } from './routes/student/courses'
import { Route as StudentLayoutRouteImport } from './routes/student/_layout'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthRecoveryRouteImport } from './routes/auth/recovery'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthLayoutRouteImport } from './routes/auth/_layout'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminLayoutRouteImport } from './routes/admin/_layout'
import { Route as errorsLayoutRouteImport } from './routes/(errors)/_layout'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as TeacherSettingsIndexRouteImport } from './routes/teacher/settings/index'
import { Route as StudentSettingsIndexRouteImport } from './routes/student/settings/index'
import { Route as AdminSettingsIndexRouteImport } from './routes/admin/settings/index'
import { Route as TeacherSettingsNotificationsRouteImport } from './routes/teacher/settings/notifications'
import { Route as TeacherSettingsDisplayRouteImport } from './routes/teacher/settings/display'
import { Route as TeacherSettingsAppearanceRouteImport } from './routes/teacher/settings/appearance'
import { Route as TeacherSettingsAccountRouteImport } from './routes/teacher/settings/account'
import { Route as TeacherSettingsLayoutRouteImport } from './routes/teacher/settings/_layout'
import { Route as StudentSettingsNotificationsRouteImport } from './routes/student/settings/notifications'
import { Route as StudentSettingsDisplayRouteImport } from './routes/student/settings/display'
import { Route as StudentSettingsAppearanceRouteImport } from './routes/student/settings/appearance'
import { Route as StudentSettingsAccountRouteImport } from './routes/student/settings/account'
import { Route as StudentSettingsLayoutRouteImport } from './routes/student/settings/_layout'
import { Route as AdminSettingsNotificationsRouteImport } from './routes/admin/settings/notifications'
import { Route as AdminSettingsDisplayRouteImport } from './routes/admin/settings/display'
import { Route as AdminSettingsAppearanceRouteImport } from './routes/admin/settings/appearance'
import { Route as AdminSettingsAccountRouteImport } from './routes/admin/settings/account'
import { Route as AdminSettingsLayoutRouteImport } from './routes/admin/settings/_layout'

const TeacherRouteImport = createFileRoute('/teacher')()
const StudentRouteImport = createFileRoute('/student')()
const AuthRouteImport = createFileRoute('/auth')()
const AdminRouteImport = createFileRoute('/admin')()
const errorsRouteImport = createFileRoute('/(errors)')()
const TeacherSettingsRouteImport = createFileRoute('/teacher/settings')()
const StudentSettingsRouteImport = createFileRoute('/student/settings')()
const AdminSettingsRouteImport = createFileRoute('/admin/settings')()

const TeacherRoute = TeacherRouteImport.update({
  id: '/teacher',
  path: '/teacher',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentRoute = StudentRouteImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const errorsRoute = errorsRouteImport.update({
  id: '/(errors)',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherSettingsRoute = TeacherSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => TeacherRoute,
} as any)
const StudentSettingsRoute = StudentSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => StudentRoute,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRoute,
} as any)
const TeacherIndexRoute = TeacherIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeacherRoute,
} as any)
const StudentIndexRoute = StudentIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const TeacherClassesRoute = TeacherClassesRouteImport.update({
  id: '/classes',
  path: '/classes',
  getParentRoute: () => TeacherRoute,
} as any)
const TeacherLayoutRoute = TeacherLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => TeacherRoute,
} as any)
const StudentCoursesRoute = StudentCoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => StudentRoute,
} as any)
const StudentLayoutRoute = StudentLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => StudentRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthRecoveryRoute = AuthRecoveryRouteImport.update({
  id: '/recovery',
  path: '/recovery',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)
const AdminLayoutRoute = AdminLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AdminRoute,
} as any)
const errorsLayoutRoute = errorsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => errorsRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherSettingsIndexRoute = TeacherSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const StudentSettingsIndexRoute = StudentSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const TeacherSettingsNotificationsRoute =
  TeacherSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => TeacherSettingsRoute,
  } as any)
const TeacherSettingsDisplayRoute = TeacherSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const TeacherSettingsAppearanceRoute =
  TeacherSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => TeacherSettingsRoute,
  } as any)
const TeacherSettingsAccountRoute = TeacherSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const TeacherSettingsLayoutRoute = TeacherSettingsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const StudentSettingsNotificationsRoute =
  StudentSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => StudentSettingsRoute,
  } as any)
const StudentSettingsDisplayRoute = StudentSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const StudentSettingsAppearanceRoute =
  StudentSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => StudentSettingsRoute,
  } as any)
const StudentSettingsAccountRoute = StudentSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const StudentSettingsLayoutRoute = StudentSettingsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const AdminSettingsNotificationsRoute =
  AdminSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminSettingsRoute,
  } as any)
const AdminSettingsDisplayRoute = AdminSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsAppearanceRoute = AdminSettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsAccountRoute = AdminSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsLayoutRoute = AdminSettingsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AdminSettingsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof errorsLayoutRoute
  '/admin': typeof AdminLayoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/auth': typeof AuthLayoutRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/recovery': typeof AuthRecoveryRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/student': typeof StudentLayoutRoute
  '/student/courses': typeof StudentCoursesRoute
  '/teacher': typeof TeacherLayoutRoute
  '/teacher/classes': typeof TeacherClassesRoute
  '/admin/': typeof AdminIndexRoute
  '/student/': typeof StudentIndexRoute
  '/teacher/': typeof TeacherIndexRoute
  '/admin/settings': typeof AdminSettingsLayoutRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/student/settings': typeof StudentSettingsLayoutRoute
  '/student/settings/account': typeof StudentSettingsAccountRoute
  '/student/settings/appearance': typeof StudentSettingsAppearanceRoute
  '/student/settings/display': typeof StudentSettingsDisplayRoute
  '/student/settings/notifications': typeof StudentSettingsNotificationsRoute
  '/teacher/settings': typeof TeacherSettingsLayoutRoute
  '/teacher/settings/account': typeof TeacherSettingsAccountRoute
  '/teacher/settings/appearance': typeof TeacherSettingsAppearanceRoute
  '/teacher/settings/display': typeof TeacherSettingsDisplayRoute
  '/teacher/settings/notifications': typeof TeacherSettingsNotificationsRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/student/settings/': typeof StudentSettingsIndexRoute
  '/teacher/settings/': typeof TeacherSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof errorsLayoutRoute
  '/admin': typeof AdminIndexRoute
  '/admin/users': typeof AdminUsersRoute
  '/auth': typeof AuthLayoutRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/recovery': typeof AuthRecoveryRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/student': typeof StudentIndexRoute
  '/student/courses': typeof StudentCoursesRoute
  '/teacher': typeof TeacherIndexRoute
  '/teacher/classes': typeof TeacherClassesRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/student/settings': typeof StudentSettingsIndexRoute
  '/student/settings/account': typeof StudentSettingsAccountRoute
  '/student/settings/appearance': typeof StudentSettingsAppearanceRoute
  '/student/settings/display': typeof StudentSettingsDisplayRoute
  '/student/settings/notifications': typeof StudentSettingsNotificationsRoute
  '/teacher/settings': typeof TeacherSettingsIndexRoute
  '/teacher/settings/account': typeof TeacherSettingsAccountRoute
  '/teacher/settings/appearance': typeof TeacherSettingsAppearanceRoute
  '/teacher/settings/display': typeof TeacherSettingsDisplayRoute
  '/teacher/settings/notifications': typeof TeacherSettingsNotificationsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/(errors)': typeof errorsRouteWithChildren
  '/(errors)/_layout': typeof errorsLayoutRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_layout': typeof AdminLayoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/recovery': typeof AuthRecoveryRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/student': typeof StudentRouteWithChildren
  '/student/_layout': typeof StudentLayoutRoute
  '/student/courses': typeof StudentCoursesRoute
  '/teacher': typeof TeacherRouteWithChildren
  '/teacher/_layout': typeof TeacherLayoutRoute
  '/teacher/classes': typeof TeacherClassesRoute
  '/admin/': typeof AdminIndexRoute
  '/student/': typeof StudentIndexRoute
  '/teacher/': typeof TeacherIndexRoute
  '/admin/settings': typeof AdminSettingsRouteWithChildren
  '/admin/settings/_layout': typeof AdminSettingsLayoutRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/student/settings': typeof StudentSettingsRouteWithChildren
  '/student/settings/_layout': typeof StudentSettingsLayoutRoute
  '/student/settings/account': typeof StudentSettingsAccountRoute
  '/student/settings/appearance': typeof StudentSettingsAppearanceRoute
  '/student/settings/display': typeof StudentSettingsDisplayRoute
  '/student/settings/notifications': typeof StudentSettingsNotificationsRoute
  '/teacher/settings': typeof TeacherSettingsRouteWithChildren
  '/teacher/settings/_layout': typeof TeacherSettingsLayoutRoute
  '/teacher/settings/account': typeof TeacherSettingsAccountRoute
  '/teacher/settings/appearance': typeof TeacherSettingsAppearanceRoute
  '/teacher/settings/display': typeof TeacherSettingsDisplayRoute
  '/teacher/settings/notifications': typeof TeacherSettingsNotificationsRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/student/settings/': typeof StudentSettingsIndexRoute
  '/teacher/settings/': typeof TeacherSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/admin'
    | '/admin/users'
    | '/auth'
    | '/auth/forgot-password'
    | '/auth/recovery'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/student'
    | '/student/courses'
    | '/teacher'
    | '/teacher/classes'
    | '/admin/'
    | '/student/'
    | '/teacher/'
    | '/admin/settings'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/student/settings'
    | '/student/settings/account'
    | '/student/settings/appearance'
    | '/student/settings/display'
    | '/student/settings/notifications'
    | '/teacher/settings'
    | '/teacher/settings/account'
    | '/teacher/settings/appearance'
    | '/teacher/settings/display'
    | '/teacher/settings/notifications'
    | '/admin/settings/'
    | '/student/settings/'
    | '/teacher/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/admin'
    | '/admin/users'
    | '/auth'
    | '/auth/forgot-password'
    | '/auth/recovery'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/student'
    | '/student/courses'
    | '/teacher'
    | '/teacher/classes'
    | '/admin/settings'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/student/settings'
    | '/student/settings/account'
    | '/student/settings/appearance'
    | '/student/settings/display'
    | '/student/settings/notifications'
    | '/teacher/settings'
    | '/teacher/settings/account'
    | '/teacher/settings/appearance'
    | '/teacher/settings/display'
    | '/teacher/settings/notifications'
  id:
    | '__root__'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(errors)'
    | '/(errors)/_layout'
    | '/admin'
    | '/admin/_layout'
    | '/admin/users'
    | '/auth'
    | '/auth/_layout'
    | '/auth/forgot-password'
    | '/auth/recovery'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/student'
    | '/student/_layout'
    | '/student/courses'
    | '/teacher'
    | '/teacher/_layout'
    | '/teacher/classes'
    | '/admin/'
    | '/student/'
    | '/teacher/'
    | '/admin/settings'
    | '/admin/settings/_layout'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/student/settings'
    | '/student/settings/_layout'
    | '/student/settings/account'
    | '/student/settings/appearance'
    | '/student/settings/display'
    | '/student/settings/notifications'
    | '/teacher/settings'
    | '/teacher/settings/_layout'
    | '/teacher/settings/account'
    | '/teacher/settings/appearance'
    | '/teacher/settings/display'
    | '/teacher/settings/notifications'
    | '/admin/settings/'
    | '/student/settings/'
    | '/teacher/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  errorsRoute: typeof errorsRouteWithChildren
  AdminRoute: typeof AdminRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  StudentRoute: typeof StudentRouteWithChildren
  TeacherRoute: typeof TeacherRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/teacher': {
      id: '/teacher'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student': {
      id: '/student'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)': {
      id: '/(errors)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof errorsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/settings': {
      id: '/teacher/settings'
      path: '/settings'
      fullPath: '/teacher/settings'
      preLoaderRoute: typeof TeacherSettingsRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/student/settings': {
      id: '/student/settings'
      path: '/settings'
      fullPath: '/student/settings'
      preLoaderRoute: typeof StudentSettingsRouteImport
      parentRoute: typeof StudentRoute
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/teacher/': {
      id: '/teacher/'
      path: '/'
      fullPath: '/teacher/'
      preLoaderRoute: typeof TeacherIndexRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/student/': {
      id: '/student/'
      path: '/'
      fullPath: '/student/'
      preLoaderRoute: typeof StudentIndexRouteImport
      parentRoute: typeof StudentRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/teacher/classes': {
      id: '/teacher/classes'
      path: '/classes'
      fullPath: '/teacher/classes'
      preLoaderRoute: typeof TeacherClassesRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/teacher/_layout': {
      id: '/teacher/_layout'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherLayoutRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/student/courses': {
      id: '/student/courses'
      path: '/courses'
      fullPath: '/student/courses'
      preLoaderRoute: typeof StudentCoursesRouteImport
      parentRoute: typeof StudentRoute
    }
    '/student/_layout': {
      id: '/student/_layout'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentLayoutRouteImport
      parentRoute: typeof StudentRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/recovery': {
      id: '/auth/recovery'
      path: '/recovery'
      fullPath: '/auth/recovery'
      preLoaderRoute: typeof AuthRecoveryRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_layout': {
      id: '/admin/_layout'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLayoutRouteImport
      parentRoute: typeof AdminRoute
    }
    '/(errors)/_layout': {
      id: '/(errors)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof errorsLayoutRouteImport
      parentRoute: typeof errorsRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/settings/': {
      id: '/teacher/settings/'
      path: '/'
      fullPath: '/teacher/settings/'
      preLoaderRoute: typeof TeacherSettingsIndexRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/student/settings/': {
      id: '/student/settings/'
      path: '/'
      fullPath: '/student/settings/'
      preLoaderRoute: typeof StudentSettingsIndexRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/teacher/settings/notifications': {
      id: '/teacher/settings/notifications'
      path: '/notifications'
      fullPath: '/teacher/settings/notifications'
      preLoaderRoute: typeof TeacherSettingsNotificationsRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/display': {
      id: '/teacher/settings/display'
      path: '/display'
      fullPath: '/teacher/settings/display'
      preLoaderRoute: typeof TeacherSettingsDisplayRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/appearance': {
      id: '/teacher/settings/appearance'
      path: '/appearance'
      fullPath: '/teacher/settings/appearance'
      preLoaderRoute: typeof TeacherSettingsAppearanceRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/account': {
      id: '/teacher/settings/account'
      path: '/account'
      fullPath: '/teacher/settings/account'
      preLoaderRoute: typeof TeacherSettingsAccountRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/_layout': {
      id: '/teacher/settings/_layout'
      path: '/settings'
      fullPath: '/teacher/settings'
      preLoaderRoute: typeof TeacherSettingsLayoutRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/student/settings/notifications': {
      id: '/student/settings/notifications'
      path: '/notifications'
      fullPath: '/student/settings/notifications'
      preLoaderRoute: typeof StudentSettingsNotificationsRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/display': {
      id: '/student/settings/display'
      path: '/display'
      fullPath: '/student/settings/display'
      preLoaderRoute: typeof StudentSettingsDisplayRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/appearance': {
      id: '/student/settings/appearance'
      path: '/appearance'
      fullPath: '/student/settings/appearance'
      preLoaderRoute: typeof StudentSettingsAppearanceRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/account': {
      id: '/student/settings/account'
      path: '/account'
      fullPath: '/student/settings/account'
      preLoaderRoute: typeof StudentSettingsAccountRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/_layout': {
      id: '/student/settings/_layout'
      path: '/settings'
      fullPath: '/student/settings'
      preLoaderRoute: typeof StudentSettingsLayoutRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/admin/settings/notifications': {
      id: '/admin/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AdminSettingsNotificationsRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/display': {
      id: '/admin/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AdminSettingsDisplayRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/appearance': {
      id: '/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AdminSettingsAppearanceRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/account': {
      id: '/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AdminSettingsAccountRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/_layout': {
      id: '/admin/settings/_layout'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsLayoutRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
  }
}

interface errorsRouteChildren {
  errorsLayoutRoute: typeof errorsLayoutRoute
}

const errorsRouteChildren: errorsRouteChildren = {
  errorsLayoutRoute: errorsLayoutRoute,
}

const errorsRouteWithChildren =
  errorsRoute._addFileChildren(errorsRouteChildren)

interface AdminSettingsRouteChildren {
  AdminSettingsLayoutRoute: typeof AdminSettingsLayoutRoute
  AdminSettingsAccountRoute: typeof AdminSettingsAccountRoute
  AdminSettingsAppearanceRoute: typeof AdminSettingsAppearanceRoute
  AdminSettingsDisplayRoute: typeof AdminSettingsDisplayRoute
  AdminSettingsNotificationsRoute: typeof AdminSettingsNotificationsRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
}

const AdminSettingsRouteChildren: AdminSettingsRouteChildren = {
  AdminSettingsLayoutRoute: AdminSettingsLayoutRoute,
  AdminSettingsAccountRoute: AdminSettingsAccountRoute,
  AdminSettingsAppearanceRoute: AdminSettingsAppearanceRoute,
  AdminSettingsDisplayRoute: AdminSettingsDisplayRoute,
  AdminSettingsNotificationsRoute: AdminSettingsNotificationsRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
}

const AdminSettingsRouteWithChildren = AdminSettingsRoute._addFileChildren(
  AdminSettingsRouteChildren,
)

interface AdminRouteChildren {
  AdminLayoutRoute: typeof AdminLayoutRoute
  AdminUsersRoute: typeof AdminUsersRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminSettingsRoute: typeof AdminSettingsRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminLayoutRoute: AdminLayoutRoute,
  AdminUsersRoute: AdminUsersRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminSettingsRoute: AdminSettingsRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthRecoveryRoute: typeof AuthRecoveryRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthRecoveryRoute: AuthRecoveryRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface StudentSettingsRouteChildren {
  StudentSettingsLayoutRoute: typeof StudentSettingsLayoutRoute
  StudentSettingsAccountRoute: typeof StudentSettingsAccountRoute
  StudentSettingsAppearanceRoute: typeof StudentSettingsAppearanceRoute
  StudentSettingsDisplayRoute: typeof StudentSettingsDisplayRoute
  StudentSettingsNotificationsRoute: typeof StudentSettingsNotificationsRoute
  StudentSettingsIndexRoute: typeof StudentSettingsIndexRoute
}

const StudentSettingsRouteChildren: StudentSettingsRouteChildren = {
  StudentSettingsLayoutRoute: StudentSettingsLayoutRoute,
  StudentSettingsAccountRoute: StudentSettingsAccountRoute,
  StudentSettingsAppearanceRoute: StudentSettingsAppearanceRoute,
  StudentSettingsDisplayRoute: StudentSettingsDisplayRoute,
  StudentSettingsNotificationsRoute: StudentSettingsNotificationsRoute,
  StudentSettingsIndexRoute: StudentSettingsIndexRoute,
}

const StudentSettingsRouteWithChildren = StudentSettingsRoute._addFileChildren(
  StudentSettingsRouteChildren,
)

interface StudentRouteChildren {
  StudentLayoutRoute: typeof StudentLayoutRoute
  StudentCoursesRoute: typeof StudentCoursesRoute
  StudentIndexRoute: typeof StudentIndexRoute
  StudentSettingsRoute: typeof StudentSettingsRouteWithChildren
}

const StudentRouteChildren: StudentRouteChildren = {
  StudentLayoutRoute: StudentLayoutRoute,
  StudentCoursesRoute: StudentCoursesRoute,
  StudentIndexRoute: StudentIndexRoute,
  StudentSettingsRoute: StudentSettingsRouteWithChildren,
}

const StudentRouteWithChildren =
  StudentRoute._addFileChildren(StudentRouteChildren)

interface TeacherSettingsRouteChildren {
  TeacherSettingsLayoutRoute: typeof TeacherSettingsLayoutRoute
  TeacherSettingsAccountRoute: typeof TeacherSettingsAccountRoute
  TeacherSettingsAppearanceRoute: typeof TeacherSettingsAppearanceRoute
  TeacherSettingsDisplayRoute: typeof TeacherSettingsDisplayRoute
  TeacherSettingsNotificationsRoute: typeof TeacherSettingsNotificationsRoute
  TeacherSettingsIndexRoute: typeof TeacherSettingsIndexRoute
}

const TeacherSettingsRouteChildren: TeacherSettingsRouteChildren = {
  TeacherSettingsLayoutRoute: TeacherSettingsLayoutRoute,
  TeacherSettingsAccountRoute: TeacherSettingsAccountRoute,
  TeacherSettingsAppearanceRoute: TeacherSettingsAppearanceRoute,
  TeacherSettingsDisplayRoute: TeacherSettingsDisplayRoute,
  TeacherSettingsNotificationsRoute: TeacherSettingsNotificationsRoute,
  TeacherSettingsIndexRoute: TeacherSettingsIndexRoute,
}

const TeacherSettingsRouteWithChildren = TeacherSettingsRoute._addFileChildren(
  TeacherSettingsRouteChildren,
)

interface TeacherRouteChildren {
  TeacherLayoutRoute: typeof TeacherLayoutRoute
  TeacherClassesRoute: typeof TeacherClassesRoute
  TeacherIndexRoute: typeof TeacherIndexRoute
  TeacherSettingsRoute: typeof TeacherSettingsRouteWithChildren
}

const TeacherRouteChildren: TeacherRouteChildren = {
  TeacherLayoutRoute: TeacherLayoutRoute,
  TeacherClassesRoute: TeacherClassesRoute,
  TeacherIndexRoute: TeacherIndexRoute,
  TeacherSettingsRoute: TeacherSettingsRouteWithChildren,
}

const TeacherRouteWithChildren =
  TeacherRoute._addFileChildren(TeacherRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  errorsRoute: errorsRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  StudentRoute: StudentRouteWithChildren,
  TeacherRoute: TeacherRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
